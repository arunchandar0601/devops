devices {
    template URLFiltering {
        config {
            /* Tags: replace */
            orgs {
                org sase-org1 {
                    appliance-owner;
                    services        [ nextgen-firewall ];
                }
                org-services sase-org1 {
                    security {
                        profiles {
                            url-filtering {
                                url-filtering-profile URLF {
                                    cloud-lookup        enabled;
                                    lef-profile-default true;
                                    decrypt-bypass      false;
                                    default-action {
                                        predefined allow;
                                    }
                                    blacklist {
                                        patterns          [ .*monster.* ];
                                        evaluate-referrer true;
                                        action {
                                            predefined block;
                                        }
                                    }
                                    whitelist {
                                        patterns          [ .*amazon.* ];
                                        log-enable        true;
                                        evaluate-referrer true;
                                    }
                                    category-action-map {
                                        category-action Shopping {
                                            url-categories {
                                                predefined [ shopping ];
                                            }
                                            action {
                                                predefined ask;
                                            }
                                        }
                                        category-action SocialNetwork {
                                            url-categories {
                                                predefined [ social_network ];
                                            }
                                            action {
                                                predefined justify;
                                            }
                                        }
                                        category-action Block_Sites {
                                            url-categories {
                                                predefined [ auctions dating gambling hacking peer_to_peer proxy_avoid_and_anonymizers weapons adult_and_pornography alcohol_and_tobacco abortion abused_drugs bot_nets illegal sex_education games malware_sites nudity violence ];
                                            }
                                            action {
                                                predefined block;
                                            }
                                        }
                                        category-action Job_Search {
                                            url-categories {
                                                predefined [ job_search ];
                                            }
                                            action {
                                                predefined allow;
                                            }
                                        }
                                    }
                                    reputation-action-map {
                                        reputation-action High_Risk {
                                            action {
                                                predefined block;
                                            }
                                        }
                                        reputation-action Suspicious {
                                            url-reputations {
                                                predefined [ suspicious ];
                                            }
                                            action {
                                                predefined block;
                                            }
                                        }
                                        reputation-action Moderate_Risk {
                                            url-reputations {
                                                predefined [ moderate_risk ];
                                            }
                                            action {
                                                predefined alert;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        captive-portal {
                            expiration-time 30;
                        }
                        access-policies {
                            access-policy-group Default-Policy {
                                rules {
                                    access-policy quic-deny {
                                        rule-disable false;
                                        match {
                                            source {
                                                user {
                                                    local-database {
                                                        status disabled;
                                                    }
                                                    external-database {
                                                        status disabled;
                                                    }
                                                    user-type any;
                                                }
                                            }
                                            services {
                                                services-list [ quic ];
                                            }
                                        }
                                        set {
                                            action                deny;
                                            tcp-session-keepalive disabled;
                                            lef {
                                                event never;
                                                options {
                                                    send-pcap-data {
                                                        enable false;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    access-policy URLF {
                                        rule-disable false;
                                        match {
                                            source {
                                                user {
                                                    local-database {
                                                        status disabled;
                                                    }
                                                    external-database {
                                                        status disabled;
                                                    }
                                                    user-type any;
                                                }
                                            }
                                        }
                                        set {
                                            security-profile {
                                                url-filtering {
                                                    user-defined URLF;
                                                }
                                            }
                                            action                allow;
                                            tcp-session-keepalive disabled;
                                            lef {
                                                profile-default true;
                                                event           both;
                                                options {
                                                    send-pcap-data {
                                                        enable false;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    objects {
                        services {
                            service quic {
                                protocol         UDP;
                                destination-port 80,443;
                            }
                        }
                    }
                }
            }
            /* Tags: replace */
            service-node-groups {
                service-node-group default-sng {
                    id       0;
                    type     internal;
                    services [ nextgen-firewall ];
                }
            }
        }
    }
}
